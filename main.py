import sys
import os
import subprocess
import atexit
import requests
import time
from pathlib import Path
from PyQt5.QtWidgets import QApplication, QMessageBox
from browser.browser_window import Browser

class ProxyManager:
    def __init__(self):
        self.proxy_process = None
        self.proxy_url = "http://127.0.0.1:5000"
    
    def is_proxy_running(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ proxy —Å–µ—Ä–≤–µ—Ä"""
        try:
            response = requests.get(f"{self.proxy_url}/health", timeout=2)
            return response.status_code == 200
        except:
            return False
    
    def start_proxy(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç proxy —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ subprocess"""
        if self.is_proxy_running():
            print("‚úì Proxy server is already running")
            return True
            
        try:
            if getattr(sys, 'frozen', False):
                # –í —Å–æ–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                proxy_path = Path(sys.executable).parent / "proxy.exe"
                if proxy_path.exists():
                    self.proxy_process = subprocess.Popen([str(proxy_path)])
                    print("‚úì Started proxy from executable")
                else:
                    print("‚úó Proxy executable not found")
                    return False
            else:
                # –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                proxy_path = Path(__file__).parent / "proxy.py"
                if proxy_path.exists():
                    self.proxy_process = subprocess.Popen(
                        [sys.executable, str(proxy_path)],
                        stdout=subprocess.PIPE,
                        stderr=subprocess.PIPE
                    )
                    print("‚úì Started proxy from Python script")
                else:
                    print("‚úó Proxy script not found")
                    return False
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ proxy
            for i in range(10):
                time.sleep(0.5)
                if self.is_proxy_running():
                    print("‚úì Proxy server started successfully")
                    return True
                print(f"Waiting for proxy... {i+1}/10")
            
            print("‚úó Proxy server failed to start")
            return False
            
        except Exception as e:
            print(f"‚úó Error starting proxy: {e}")
            return False
    
    def stop_proxy(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç proxy —Å–µ—Ä–≤–µ—Ä"""
        if self.proxy_process:
            try:
                self.proxy_process.terminate()
                self.proxy_process.wait(timeout=5)
                print("‚úì Proxy server stopped")
            except subprocess.TimeoutExpired:
                self.proxy_process.kill()
                print("‚úì Proxy server force stopped")
            except Exception as e:
                print(f"‚úó Error stopping proxy: {e}")

def main():
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä proxy
    proxy_manager = ProxyManager()
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å proxy
    if not proxy_manager.start_proxy():
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å proxy, —Å–ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Warning)
        msg.setWindowTitle("Proxy Server")
        msg.setText("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å proxy —Å–µ—Ä–≤–µ—Ä")
        msg.setInformativeText("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –ø–æ–∏—Å–∫–∞ –∏ AI —Ñ—É–Ω–∫—Ü–∏–π?")
        msg.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
        
        if msg.exec_() == QMessageBox.No:
            sys.exit(1)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É proxy –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    atexit.register(proxy_manager.stop_proxy)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Qt
    app = QApplication(sys.argv)
    app.setApplicationName("Miku Browser Pro üé∂")
    app.setApplicationVersion("2.0.0")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º —Ñ–∞–π–ª–∞–º
    def get_resource_path(relative_path: str) -> str:
        """–†–∞–±–æ—Ç–∞–µ—Ç –∏ –≤ dev, –∏ –≤ exe"""
        if getattr(sys, 'frozen', False):
            # –¥–ª—è exe
            return str(Path(sys._MEIPASS) / relative_path)
        else:
            # –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            return str(Path(__file__).parent / relative_path)

    # –í main()
    static_path = get_resource_path("static")

    
    # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    window = Browser(str(static_path))
    window.show()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    exit_code = app.exec_()
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º proxy –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
    proxy_manager.stop_proxy()
    
    sys.exit(exit_code)

if __name__ == "__main__":
    main()